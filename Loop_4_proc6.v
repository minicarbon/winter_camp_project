// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_4_proc6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        pooling_axi,
        in_width_axi,
        con_out_V_dout,
        con_out_V_empty_n,
        con_out_V_read,
        strm_out_V_TDATA,
        strm_out_V_TVALID,
        strm_out_V_TREADY
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_pp0_stage0 = 6'd4;
parameter    ap_ST_fsm_pp0_stage1 = 6'd8;
parameter    ap_ST_fsm_pp0_stage2 = 6'd16;
parameter    ap_ST_fsm_state17 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] pooling_axi;
input  [31:0] in_width_axi;
input  [31:0] con_out_V_dout;
input   con_out_V_empty_n;
output   con_out_V_read;
output  [31:0] strm_out_V_TDATA;
output   strm_out_V_TVALID;
input   strm_out_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg con_out_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] strm_out_V_1_data_out;
reg    strm_out_V_1_vld_in;
wire    strm_out_V_1_vld_out;
wire    strm_out_V_1_ack_in;
wire    strm_out_V_1_ack_out;
reg   [31:0] strm_out_V_1_payload_A;
reg   [31:0] strm_out_V_1_payload_B;
reg    strm_out_V_1_sel_rd;
reg    strm_out_V_1_sel_wr;
wire    strm_out_V_1_sel;
wire    strm_out_V_1_load_A;
wire    strm_out_V_1_load_B;
reg   [1:0] strm_out_V_1_state;
wire    strm_out_V_1_state_cmp_full;
reg    con_out_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln182_1_reg_673;
reg   [0:0] or_ln189_reg_714;
reg    strm_out_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0;
reg   [0:0] and_ln182_1_reg_705;
reg   [0:0] and_ln182_1_reg_705_pp0_iter3_reg;
reg   [0:0] or_ln222_reg_740;
reg   [0:0] or_ln222_reg_740_pp0_iter3_reg;
reg   [0:0] and_ln222_reg_736;
reg   [0:0] and_ln222_reg_736_pp0_iter3_reg;
wire   [0:0] icmp_ln196_fu_272_p2;
reg   [0:0] and_ln182_1_reg_705_pp0_iter4_reg;
reg   [0:0] or_ln222_reg_740_pp0_iter4_reg;
reg   [0:0] and_ln222_reg_736_pp0_iter4_reg;
reg   [63:0] indvar_flatten_reg_158;
reg   [30:0] row4_0_reg_169;
reg   [31:0] col_assign_3_reg_180;
reg   [31:0] out_data_reg_191;
wire   [31:0] pool_line_buf_val_0_q0;
reg   [31:0] reg_238;
reg    ap_predicate_op91_read_state4;
reg    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state13_pp0_stage1_iter3;
wire    ap_block_state16_pp0_stage1_iter4;
reg    ap_predicate_op156_write_state16;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln198_fu_284_p2;
wire   [0:0] icmp_ln182_fu_256_p2;
reg   [0:0] and_ln208_reg_722;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state14_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
reg    ap_block_state1;
wire   [31:0] add_ln182_fu_266_p2;
wire   [0:0] icmp_ln222_1_fu_278_p2;
wire   [63:0] bound_fu_293_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln182_1_fu_314_p2;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state12_pp0_stage0_iter3;
wire    ap_block_state15_pp0_stage0_iter4;
reg    ap_predicate_op153_write_state15;
reg    ap_block_state15_io;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] add_ln182_1_fu_319_p2;
reg   [63:0] add_ln182_1_reg_677;
wire   [31:0] select_ln182_fu_340_p3;
reg   [31:0] select_ln182_reg_682;
reg   [31:0] select_ln182_reg_682_pp0_iter1_reg;
wire   [30:0] select_ln182_1_fu_350_p3;
reg   [30:0] select_ln182_1_reg_691;
wire   [0:0] trunc_ln182_fu_358_p1;
reg   [0:0] trunc_ln182_reg_696;
wire   [0:0] select_ln182_2_fu_368_p3;
reg   [0:0] select_ln182_2_reg_701;
reg   [0:0] select_ln182_2_reg_701_pp0_iter1_reg;
wire   [0:0] and_ln182_1_fu_389_p2;
reg   [0:0] and_ln182_1_reg_705_pp0_iter1_reg;
reg   [0:0] and_ln182_1_reg_705_pp0_iter2_reg;
wire   [0:0] trunc_ln183_fu_399_p1;
reg   [0:0] trunc_ln183_reg_709;
wire   [0:0] or_ln189_fu_408_p2;
wire   [0:0] icmp_ln208_fu_414_p2;
reg   [0:0] icmp_ln208_reg_718;
reg   [0:0] icmp_ln208_reg_718_pp0_iter1_reg;
wire   [0:0] and_ln208_fu_420_p2;
reg   [6:0] pool_line_buf_val_0_6_reg_731;
reg   [6:0] pool_line_buf_val_0_6_reg_731_pp0_iter1_reg;
wire   [0:0] and_ln222_fu_436_p2;
reg   [0:0] and_ln222_reg_736_pp0_iter1_reg;
reg   [0:0] and_ln222_reg_736_pp0_iter2_reg;
wire   [0:0] or_ln222_fu_496_p2;
reg   [0:0] or_ln222_reg_740_pp0_iter1_reg;
reg   [0:0] or_ln222_reg_740_pp0_iter2_reg;
wire   [31:0] pool_line_buf_val_0_q1;
reg   [31:0] pool_line_buf_val_0_7_reg_744;
reg   [6:0] pool_line_buf_val_0_1_reg_750;
reg   [31:0] a_assign_4_load_reg_756;
wire   [31:0] col_fu_574_p2;
reg   [31:0] col_reg_762;
wire   [31:0] pool_tmp1_fu_579_p3;
reg   [31:0] pool_tmp1_reg_767;
wire   [31:0] pool_tmp2_fu_586_p3;
reg   [31:0] pool_tmp2_reg_772;
wire   [31:0] pool_1_insert_data_fu_600_p3;
reg   [31:0] pool_1_insert_data_reg_777;
reg   [31:0] out_data6_1_load_reg_782;
reg   [31:0] out_data6_1_load_reg_782_pp0_iter2_reg;
reg   [31:0] out_data6_1_load_reg_782_pp0_iter3_reg;
wire   [0:0] grp_fu_217_p2;
reg   [0:0] tmp_i7_reg_789;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] tmp_i7_reg_789_pp0_iter2_reg;
reg   [0:0] tmp_i7_reg_789_pp0_iter3_reg;
wire   [63:0] grp_fu_207_p1;
reg   [63:0] tmp_i_20_reg_794;
wire   [63:0] grp_fu_223_p2;
reg   [63:0] tmp_1_i_reg_799;
wire   [31:0] real_out_data_fu_617_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg   [6:0] pool_line_buf_val_0_address0;
reg    pool_line_buf_val_0_ce0;
reg   [6:0] pool_line_buf_val_0_address1;
reg    pool_line_buf_val_0_ce1;
reg    pool_line_buf_val_0_we1;
reg   [31:0] pool_line_buf_val_0_d1;
reg   [63:0] ap_phi_mux_indvar_flatten_phi_fu_162_p4;
reg   [30:0] ap_phi_mux_row4_0_phi_fu_173_p4;
reg   [31:0] ap_phi_mux_col_assign_3_phi_fu_184_p4;
reg   [31:0] ap_phi_mux_out_data_phi_fu_195_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_out_data_reg_191;
wire   [63:0] zext_ln835_1_fu_426_p1;
wire   [63:0] zext_ln835_2_fu_431_p1;
wire   [63:0] zext_ln835_fu_555_p1;
wire   [63:0] zext_ln765_fu_607_p1;
reg   [31:0] a_assign_4_fu_84;
wire    ap_block_pp0_stage2;
reg   [31:0] out_data6_1_fu_88;
wire   [31:0] grp_fu_243_p3;
wire    ap_block_pp0_stage0_01001;
reg   [31:0] grp_fu_210_p0;
reg   [31:0] grp_fu_210_p1;
reg   [31:0] grp_fu_217_p0;
reg   [31:0] grp_fu_217_p1;
reg   [31:0] grp_fu_228_p0;
wire   [0:0] grp_fu_210_p2;
wire   [31:0] zext_ln182_fu_262_p1;
wire   [31:0] bound_fu_293_p0;
wire   [63:0] cast_fu_290_p1;
wire   [31:0] bound_fu_293_p1;
wire   [31:0] zext_ln182_2_fu_299_p1;
wire   [30:0] add_ln182_2_fu_325_p2;
wire   [0:0] icmp_ln183_fu_335_p2;
wire   [0:0] icmp_ln222_5_fu_362_p2;
wire   [0:0] icmp_ln222_fu_303_p2;
wire   [31:0] zext_ln182_1_fu_331_p1;
wire   [0:0] icmp_ln189_2_fu_376_p2;
wire   [0:0] icmp_ln189_fu_309_p2;
wire   [0:0] select_ln182_3_fu_381_p3;
wire   [0:0] icmp_ln189_1_fu_403_p2;
wire   [31:0] grp_fu_228_p2;
wire   [0:0] and_ln182_fu_394_p2;
wire   [0:0] grp_fu_233_p2;
wire   [0:0] trunc_ln222_fu_450_p1;
wire   [1:0] tmp_2_fu_454_p3;
wire   [0:0] tmp_1_fu_442_p3;
wire   [1:0] sub_ln222_fu_462_p2;
wire   [1:0] tmp_s_fu_468_p3;
wire   [1:0] select_ln222_fu_476_p3;
wire   [0:0] icmp_ln222_3_fu_484_p2;
wire   [0:0] and_ln222_1_fu_490_p2;
wire   [31:0] sub_ln201_fu_509_p2;
wire   [30:0] lshr_ln201_1_fu_514_p4;
wire   [31:0] zext_ln201_fu_524_p1;
wire   [30:0] lshr_ln201_2_fu_534_p4;
wire   [0:0] tmp_fu_502_p3;
wire   [31:0] sub_ln201_1_fu_528_p2;
wire   [31:0] zext_ln201_1_fu_543_p1;
wire   [31:0] select_ln201_fu_547_p3;
wire   [31:0] phitmp_fu_593_p3;
wire   [31:0] grp_fu_204_p1;
reg    grp_fu_204_ce;
reg    grp_fu_207_ce;
reg    grp_fu_210_ce;
reg    ap_predicate_op95_fcmp_state4;
reg    ap_predicate_op115_fcmp_state5;
reg    ap_predicate_op120_fcmp_state5;
reg    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage2_00001;
reg    grp_fu_217_ce;
reg    ap_predicate_op116_fcmp_state5;
reg    ap_predicate_op139_fcmp_state7;
reg   [4:0] grp_fu_217_opcode;
reg    grp_fu_223_ce;
wire    ap_CS_fsm_state17;
reg    ap_block_state17;
reg   [5:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op69_load_state3;
reg    ap_enable_operation_69;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_predicate_op94_load_state4;
reg    ap_enable_operation_94;
reg    ap_enable_state4_pp0_iter0_stage1;
reg    ap_predicate_op134_store_state7;
reg    ap_enable_operation_134;
reg    ap_enable_state7_pp0_iter1_stage1;
reg    ap_predicate_op136_store_state7;
reg    ap_enable_operation_136;
reg    ap_predicate_op141_store_state8;
reg    ap_enable_operation_141;
reg    ap_enable_state8_pp0_iter1_stage2;
reg    ap_predicate_op74_load_state3;
reg    ap_enable_operation_74;
reg    ap_predicate_op96_load_state4;
reg    ap_enable_operation_96;
reg    ap_predicate_op107_load_state4;
reg    ap_enable_operation_107;
reg    ap_predicate_op119_load_state5;
reg    ap_enable_operation_119;
reg    ap_enable_state5_pp0_iter0_stage2;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_196;
reg    ap_condition_979;
reg    ap_condition_982;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 strm_out_V_1_sel_rd = 1'b0;
#0 strm_out_V_1_sel_wr = 1'b0;
#0 strm_out_V_1_state = 2'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Loop_4_proc6_poolg8j #(
    .DataWidth( 32 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
pool_line_buf_val_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pool_line_buf_val_0_address0),
    .ce0(pool_line_buf_val_0_ce0),
    .q0(pool_line_buf_val_0_q0),
    .address1(pool_line_buf_val_0_address1),
    .ce1(pool_line_buf_val_0_ce1),
    .we1(pool_line_buf_val_0_we1),
    .d1(pool_line_buf_val_0_d1),
    .q1(pool_line_buf_val_0_q1)
);

cnn_fptrunc_64ns_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
cnn_fptrunc_64ns_hbi_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_i_reg_799),
    .ce(grp_fu_204_ce),
    .dout(grp_fu_204_p1)
);

cnn_fpext_32ns_64ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
cnn_fpext_32ns_64ibs_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(out_data6_1_fu_88),
    .ce(grp_fu_207_ce),
    .dout(grp_fu_207_p1)
);

cnn_fcmp_32ns_32njbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32njbC_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_210_p0),
    .din1(grp_fu_210_p1),
    .ce(grp_fu_210_ce),
    .opcode(5'd2),
    .dout(grp_fu_210_p2)
);

cnn_fcmp_32ns_32njbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32njbC_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_217_p0),
    .din1(grp_fu_217_p1),
    .ce(grp_fu_217_ce),
    .opcode(grp_fu_217_opcode),
    .dout(grp_fu_217_p2)
);

cnn_dmul_64ns_64nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
cnn_dmul_64ns_64nkbM_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_20_reg_794),
    .din1(64'd4591870180066957722),
    .ce(grp_fu_223_ce),
    .dout(grp_fu_223_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((strm_out_V_1_state == 2'd1) | ((strm_out_V_1_state == 2'd3) & (strm_out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        strm_out_V_1_sel_rd <= 1'b0;
    end else begin
        if (((strm_out_V_1_ack_out == 1'b1) & (strm_out_V_1_vld_out == 1'b1))) begin
            strm_out_V_1_sel_rd <= ~strm_out_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        strm_out_V_1_sel_wr <= 1'b0;
    end else begin
        if (((strm_out_V_1_ack_in == 1'b1) & (strm_out_V_1_vld_in == 1'b1))) begin
            strm_out_V_1_sel_wr <= ~strm_out_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        strm_out_V_1_state <= 2'd0;
    end else begin
        if ((((strm_out_V_1_state == 2'd2) & (strm_out_V_1_vld_in == 1'b0)) | ((strm_out_V_1_state == 2'd3) & (strm_out_V_1_vld_in == 1'b0) & (strm_out_V_1_ack_out == 1'b1)))) begin
            strm_out_V_1_state <= 2'd2;
        end else if ((((strm_out_V_1_state == 2'd1) & (strm_out_V_TREADY == 1'b0)) | ((strm_out_V_1_state == 2'd3) & (strm_out_V_TREADY == 1'b0) & (strm_out_V_1_vld_in == 1'b1)))) begin
            strm_out_V_1_state <= 2'd1;
        end else if (((~((strm_out_V_1_vld_in == 1'b0) & (strm_out_V_1_ack_out == 1'b1)) & ~((strm_out_V_TREADY == 1'b0) & (strm_out_V_1_vld_in == 1'b1)) & (strm_out_V_1_state == 2'd3)) | ((strm_out_V_1_state == 2'd1) & (strm_out_V_1_ack_out == 1'b1)) | ((strm_out_V_1_state == 2'd2) & (strm_out_V_1_vld_in == 1'b1)))) begin
            strm_out_V_1_state <= 2'd3;
        end else begin
            strm_out_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_assign_3_reg_180 <= col_reg_762;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        col_assign_3_reg_180 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_158 <= add_ln182_1_reg_677;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_158 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln208_reg_722) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        out_data6_1_fu_88 <= grp_fu_243_p3;
    end else if (((icmp_ln196_fu_272_p2 == 1'd1) & (icmp_ln182_1_reg_673 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        out_data6_1_fu_88 <= ap_phi_mux_out_data_phi_fu_195_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_196)) begin
        if (((or_ln189_reg_714 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0))) begin
            out_data_reg_191 <= con_out_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            out_data_reg_191 <= ap_phi_reg_pp0_iter0_out_data_reg_191;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row4_0_reg_169 <= select_ln182_1_reg_691;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row4_0_reg_169 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        a_assign_4_fu_84 <= out_data_reg_191;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln208_reg_718 == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_assign_4_load_reg_756 <= a_assign_4_fu_84;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln182_1_reg_677 <= add_ln182_1_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln182_1_fu_314_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln182_1_reg_705 <= and_ln182_1_fu_389_p2;
        or_ln189_reg_714 <= or_ln189_fu_408_p2;
        select_ln182_2_reg_701 <= select_ln182_2_fu_368_p3;
        select_ln182_reg_682 <= select_ln182_fu_340_p3;
        trunc_ln182_reg_696 <= trunc_ln182_fu_358_p1;
        trunc_ln183_reg_709 <= trunc_ln183_fu_399_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln182_1_reg_705_pp0_iter1_reg <= and_ln182_1_reg_705;
        and_ln182_1_reg_705_pp0_iter2_reg <= and_ln182_1_reg_705_pp0_iter1_reg;
        and_ln182_1_reg_705_pp0_iter3_reg <= and_ln182_1_reg_705_pp0_iter2_reg;
        and_ln182_1_reg_705_pp0_iter4_reg <= and_ln182_1_reg_705_pp0_iter3_reg;
        and_ln222_reg_736_pp0_iter1_reg <= and_ln222_reg_736;
        and_ln222_reg_736_pp0_iter2_reg <= and_ln222_reg_736_pp0_iter1_reg;
        and_ln222_reg_736_pp0_iter3_reg <= and_ln222_reg_736_pp0_iter2_reg;
        and_ln222_reg_736_pp0_iter4_reg <= and_ln222_reg_736_pp0_iter3_reg;
        icmp_ln182_1_reg_673 <= icmp_ln182_1_fu_314_p2;
        icmp_ln208_reg_718_pp0_iter1_reg <= icmp_ln208_reg_718;
        or_ln222_reg_740_pp0_iter1_reg <= or_ln222_reg_740;
        or_ln222_reg_740_pp0_iter2_reg <= or_ln222_reg_740_pp0_iter1_reg;
        or_ln222_reg_740_pp0_iter3_reg <= or_ln222_reg_740_pp0_iter2_reg;
        or_ln222_reg_740_pp0_iter4_reg <= or_ln222_reg_740_pp0_iter3_reg;
        pool_line_buf_val_0_6_reg_731_pp0_iter1_reg <= pool_line_buf_val_0_6_reg_731;
        select_ln182_2_reg_701_pp0_iter1_reg <= select_ln182_2_reg_701;
        select_ln182_reg_682_pp0_iter1_reg <= select_ln182_reg_682;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln182_1_fu_314_p2 == 1'd0) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln208_reg_722 <= and_ln208_fu_420_p2;
        icmp_ln208_reg_718 <= icmp_ln208_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln182_1_fu_389_p2) & (icmp_ln182_1_fu_314_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln222_reg_736 <= and_ln222_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        col_reg_762 <= col_fu_574_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln182_1_fu_389_p2) & (icmp_ln182_1_fu_314_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln222_reg_740 <= or_ln222_fu_496_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & ((icmp_ln196_fu_272_p2 == 1'd1) | (((1'd1 == and_ln222_reg_736_pp0_iter1_reg) & (1'd0 == and_ln182_1_reg_705_pp0_iter1_reg)) | ((or_ln222_reg_740_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln182_1_reg_705_pp0_iter1_reg)))))) begin
        out_data6_1_load_reg_782 <= out_data6_1_fu_88;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        out_data6_1_load_reg_782_pp0_iter2_reg <= out_data6_1_load_reg_782;
        out_data6_1_load_reg_782_pp0_iter3_reg <= out_data6_1_load_reg_782_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pool_1_insert_data_reg_777 <= pool_1_insert_data_fu_600_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        pool_line_buf_val_0_1_reg_750 <= zext_ln835_fu_555_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln182_2_fu_368_p3 == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln182_1_fu_314_p2 == 1'd0) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pool_line_buf_val_0_6_reg_731 <= zext_ln835_2_fu_431_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln182_2_reg_701 == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        pool_line_buf_val_0_7_reg_744 <= pool_line_buf_val_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln208_reg_718 == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pool_tmp1_reg_767 <= pool_tmp1_fu_579_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln182_2_reg_701 == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pool_tmp2_reg_772 <= pool_tmp2_fu_586_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'd1 == and_ln208_reg_722) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_238 <= pool_line_buf_val_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln182_1_fu_314_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln182_1_reg_691 <= select_ln182_1_fu_350_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((strm_out_V_1_load_A == 1'b1)) begin
        strm_out_V_1_payload_A <= real_out_data_fu_617_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((strm_out_V_1_load_B == 1'b1)) begin
        strm_out_V_1_payload_B <= real_out_data_fu_617_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & ((((tmp_i7_reg_789_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln222_reg_736_pp0_iter3_reg) & (1'd0 == and_ln182_1_reg_705_pp0_iter3_reg)) | ((tmp_i7_reg_789_pp0_iter2_reg == 1'd1) & (or_ln222_reg_740_pp0_iter3_reg == 1'd1) & (1'd1 == and_ln182_1_reg_705_pp0_iter3_reg))) | ((tmp_i7_reg_789_pp0_iter2_reg == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd1))))) begin
        tmp_1_i_reg_799 <= grp_fu_223_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & ((icmp_ln196_fu_272_p2 == 1'd1) | (((1'd1 == and_ln222_reg_736_pp0_iter1_reg) & (1'd0 == and_ln182_1_reg_705_pp0_iter1_reg)) | ((or_ln222_reg_740_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln182_1_reg_705_pp0_iter1_reg)))))) begin
        tmp_i7_reg_789 <= grp_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_i7_reg_789_pp0_iter2_reg <= tmp_i7_reg_789;
        tmp_i7_reg_789_pp0_iter3_reg <= tmp_i7_reg_789_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & ((icmp_ln196_fu_272_p2 == 1'd1) | (((1'd1 == and_ln222_reg_736_pp0_iter1_reg) & (1'd0 == and_ln182_1_reg_705_pp0_iter1_reg)) | ((or_ln222_reg_740_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln182_1_reg_705_pp0_iter1_reg)))))) begin
        tmp_i_20_reg_794 <= grp_fu_207_p1;
    end
end

always @ (*) begin
    if ((icmp_ln182_1_fu_314_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((~((strm_out_V_1_state == 2'd1) | ((strm_out_V_1_state == 2'd3) & (strm_out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln182_1_reg_673 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_col_assign_3_phi_fu_184_p4 = col_reg_762;
    end else begin
        ap_phi_mux_col_assign_3_phi_fu_184_p4 = col_assign_3_reg_180;
    end
end

always @ (*) begin
    if (((icmp_ln182_1_reg_673 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_162_p4 = add_ln182_1_reg_677;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_162_p4 = indvar_flatten_reg_158;
    end
end

always @ (*) begin
    if (((or_ln189_reg_714 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_out_data_phi_fu_195_p4 = con_out_V_dout;
    end else begin
        ap_phi_mux_out_data_phi_fu_195_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((icmp_ln182_1_reg_673 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_row4_0_phi_fu_173_p4 = select_ln182_1_reg_691;
    end else begin
        ap_phi_mux_row4_0_phi_fu_173_p4 = row4_0_reg_169;
    end
end

always @ (*) begin
    if ((~((strm_out_V_1_state == 2'd1) | ((strm_out_V_1_state == 2'd3) & (strm_out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln189_reg_714 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        con_out_V_blk_n = con_out_V_empty_n;
    end else begin
        con_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op91_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        con_out_V_read = 1'b1;
    end else begin
        con_out_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_204_ce = 1'b1;
    end else begin
        grp_fu_204_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_207_ce = 1'b1;
    end else begin
        grp_fu_207_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_210_ce = 1'b1;
    end else begin
        grp_fu_210_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln208_reg_718 == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_210_p0 = a_assign_4_fu_84;
    end else if ((((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_fu_210_p0 = pool_line_buf_val_0_q0;
    end else begin
        grp_fu_210_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln208_reg_718 == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_210_p1 = out_data_reg_191;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_210_p1 = ap_phi_mux_out_data_phi_fu_195_p4;
    end else begin
        grp_fu_210_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_217_ce = 1'b1;
    end else begin
        grp_fu_217_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_00001) & (ap_predicate_op139_fcmp_state7 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_217_opcode = 5'd4;
    end else if (((1'b0 == ap_block_pp0_stage2_00001) & (ap_predicate_op116_fcmp_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_217_opcode = 5'd2;
    end else begin
        grp_fu_217_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_217_p0 = out_data6_1_fu_88;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_217_p0 = pool_line_buf_val_0_7_reg_744;
    end else begin
        grp_fu_217_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_217_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_217_p1 = out_data_reg_191;
    end else begin
        grp_fu_217_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_223_ce = 1'b1;
    end else begin
        grp_fu_223_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_228_p0 = select_ln182_reg_682_pp0_iter1_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_228_p0 = select_ln182_fu_340_p3;
    end else begin
        grp_fu_228_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            pool_line_buf_val_0_address0 = zext_ln835_fu_555_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            pool_line_buf_val_0_address0 = zext_ln835_1_fu_426_p1;
        end else begin
            pool_line_buf_val_0_address0 = 'bx;
        end
    end else begin
        pool_line_buf_val_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        pool_line_buf_val_0_address1 = pool_line_buf_val_0_6_reg_731_pp0_iter1_reg;
    end else if (((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        pool_line_buf_val_0_address1 = pool_line_buf_val_0_1_reg_750;
    end else if (((icmp_ln208_reg_718_pp0_iter1_reg == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        pool_line_buf_val_0_address1 = zext_ln765_fu_607_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pool_line_buf_val_0_address1 = zext_ln835_2_fu_431_p1;
    end else begin
        pool_line_buf_val_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        pool_line_buf_val_0_ce0 = 1'b1;
    end else begin
        pool_line_buf_val_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln208_reg_718_pp0_iter1_reg == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        pool_line_buf_val_0_ce1 = 1'b1;
    end else begin
        pool_line_buf_val_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            pool_line_buf_val_0_d1 = pool_tmp2_reg_772;
        end else if ((1'b1 == ap_condition_982)) begin
            pool_line_buf_val_0_d1 = pool_1_insert_data_reg_777;
        end else if ((1'b1 == ap_condition_979)) begin
            pool_line_buf_val_0_d1 = pool_tmp1_reg_767;
        end else begin
            pool_line_buf_val_0_d1 = 'bx;
        end
    end else begin
        pool_line_buf_val_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((select_ln182_2_reg_701_pp0_iter1_reg == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln208_reg_718_pp0_iter1_reg == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        pool_line_buf_val_0_we1 = 1'b1;
    end else begin
        pool_line_buf_val_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((strm_out_V_1_sel == 1'b1)) begin
        strm_out_V_1_data_out = strm_out_V_1_payload_B;
    end else begin
        strm_out_V_1_data_out = strm_out_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op153_write_state15 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        strm_out_V_1_vld_in = 1'b1;
    end else begin
        strm_out_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & ((icmp_ln196_fu_272_p2 == 1'd1) | (((1'd1 == and_ln222_reg_736_pp0_iter3_reg) & (1'd0 == and_ln182_1_reg_705_pp0_iter3_reg)) | ((or_ln222_reg_740_pp0_iter3_reg == 1'd1) & (1'd1 == and_ln182_1_reg_705_pp0_iter3_reg))))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & ((icmp_ln196_fu_272_p2 == 1'd1) | (((1'd1 == and_ln222_reg_736_pp0_iter4_reg) & (1'd0 == and_ln182_1_reg_705_pp0_iter4_reg)) | ((or_ln222_reg_740_pp0_iter4_reg == 1'd1) & (1'd1 == and_ln182_1_reg_705_pp0_iter4_reg))))))) begin
        strm_out_V_TDATA_blk_n = strm_out_V_1_state[1'd1];
    end else begin
        strm_out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln182_1_fu_314_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln182_1_fu_314_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state17 : begin
            if ((~((strm_out_V_1_state == 2'd1) | ((strm_out_V_1_state == 2'd3) & (strm_out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln182_1_fu_319_p2 = (ap_phi_mux_indvar_flatten_phi_fu_162_p4 + 64'd1);

assign add_ln182_2_fu_325_p2 = (31'd1 + ap_phi_mux_row4_0_phi_fu_173_p4);

assign add_ln182_fu_266_p2 = (zext_ln182_fu_262_p1 + in_width_axi);

assign and_ln182_1_fu_389_p2 = (trunc_ln182_fu_358_p1 & icmp_ln222_1_fu_278_p2);

assign and_ln182_fu_394_p2 = (select_ln182_2_fu_368_p3 & icmp_ln182_fu_256_p2);

assign and_ln208_fu_420_p2 = (select_ln182_2_fu_368_p3 & icmp_ln208_fu_414_p2);

assign and_ln222_1_fu_490_p2 = (grp_fu_233_p2 & and_ln182_fu_394_p2);

assign and_ln222_fu_436_p2 = (grp_fu_233_p2 & and_ln182_fu_394_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage2 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage2_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)) | ((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_00001 = ((con_out_V_empty_n == 1'b0) & (ap_predicate_op91_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((con_out_V_empty_n == 1'b0) & (ap_predicate_op91_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((con_out_V_empty_n == 1'b0) & (ap_predicate_op91_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_io = ((strm_out_V_1_ack_in == 1'b0) & (ap_predicate_op153_write_state15 == 1'b1));
end

assign ap_block_state15_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_io = ((strm_out_V_1_ack_in == 1'b0) & (ap_predicate_op156_write_state16 == 1'b1));
end

assign ap_block_state16_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17 = ((strm_out_V_1_state == 2'd1) | ((strm_out_V_1_state == 2'd3) & (strm_out_V_TREADY == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage1_iter0 = ((con_out_V_empty_n == 1'b0) & (ap_predicate_op91_read_state4 == 1'b1));
end

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_196 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_979 = ((icmp_ln208_reg_718_pp0_iter1_reg == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1));
end

always @ (*) begin
    ap_condition_982 = ((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1));
end

always @ (*) begin
    ap_enable_operation_107 = (ap_predicate_op107_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_119 = (ap_predicate_op119_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_134 = (ap_predicate_op134_store_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_136 = (ap_predicate_op136_store_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_141 = (ap_predicate_op141_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_69 = (ap_predicate_op69_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_74 = (ap_predicate_op74_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_94 = (ap_predicate_op94_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_96 = (ap_predicate_op96_load_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter0_stage1 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state5_pp0_iter0_stage2 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state7_pp0_iter1_stage1 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state8_pp0_iter1_stage2 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

assign ap_phi_reg_pp0_iter0_out_data_reg_191 = 32'd0;

always @ (*) begin
    ap_predicate_op107_load_state4 = ((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0));
end

always @ (*) begin
    ap_predicate_op115_fcmp_state5 = ((icmp_ln208_reg_718 == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0));
end

always @ (*) begin
    ap_predicate_op116_fcmp_state5 = ((select_ln182_2_reg_701 == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0));
end

always @ (*) begin
    ap_predicate_op119_load_state5 = ((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0));
end

always @ (*) begin
    ap_predicate_op120_fcmp_state5 = ((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0));
end

always @ (*) begin
    ap_predicate_op134_store_state7 = ((icmp_ln208_reg_718_pp0_iter1_reg == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op136_store_state7 = ((icmp_ln198_fu_284_p2 == 1'd1) & (icmp_ln196_fu_272_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op139_fcmp_state7 = ((icmp_ln196_fu_272_p2 == 1'd1) | (((1'd1 == and_ln222_reg_736_pp0_iter1_reg) & (1'd0 == and_ln182_1_reg_705_pp0_iter1_reg)) | ((or_ln222_reg_740_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln182_1_reg_705_pp0_iter1_reg))));
end

always @ (*) begin
    ap_predicate_op141_store_state8 = ((select_ln182_2_reg_701_pp0_iter1_reg == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op153_write_state15 = ((icmp_ln196_fu_272_p2 == 1'd1) | (((1'd1 == and_ln222_reg_736_pp0_iter3_reg) & (1'd0 == and_ln182_1_reg_705_pp0_iter3_reg)) | ((or_ln222_reg_740_pp0_iter3_reg == 1'd1) & (1'd1 == and_ln182_1_reg_705_pp0_iter3_reg))));
end

always @ (*) begin
    ap_predicate_op156_write_state16 = ((icmp_ln196_fu_272_p2 == 1'd1) | (((1'd1 == and_ln222_reg_736_pp0_iter4_reg) & (1'd0 == and_ln182_1_reg_705_pp0_iter4_reg)) | ((or_ln222_reg_740_pp0_iter4_reg == 1'd1) & (1'd1 == and_ln182_1_reg_705_pp0_iter4_reg))));
end

always @ (*) begin
    ap_predicate_op69_load_state3 = ((1'd1 == and_ln208_fu_420_p2) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln182_1_fu_314_p2 == 1'd0) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op74_load_state3 = ((select_ln182_2_fu_368_p3 == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln182_1_fu_314_p2 == 1'd0) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op91_read_state4 = ((or_ln189_reg_714 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0));
end

always @ (*) begin
    ap_predicate_op94_load_state4 = ((1'd1 == and_ln208_reg_722) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0));
end

always @ (*) begin
    ap_predicate_op95_fcmp_state4 = ((1'd1 == and_ln208_reg_722) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0));
end

always @ (*) begin
    ap_predicate_op96_load_state4 = ((select_ln182_2_reg_701 == 1'd1) & (icmp_ln182_fu_256_p2 == 1'd1) & (icmp_ln198_fu_284_p2 == 1'd0) & (icmp_ln196_fu_272_p2 == 1'd0) & (icmp_ln182_1_reg_673 == 1'd0));
end

assign bound_fu_293_p0 = cast_fu_290_p1;

assign bound_fu_293_p1 = cast_fu_290_p1;

assign bound_fu_293_p2 = (bound_fu_293_p0 * bound_fu_293_p1);

assign cast_fu_290_p1 = add_ln182_fu_266_p2;

assign col_fu_574_p2 = (select_ln182_reg_682 + 32'd1);

assign grp_fu_228_p2 = ($signed(grp_fu_228_p0) + $signed(32'd4294967295));

assign grp_fu_233_p2 = (($signed(select_ln182_fu_340_p3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_243_p3 = ((grp_fu_210_p2[0:0] === 1'b1) ? reg_238 : out_data_reg_191);

assign icmp_ln182_1_fu_314_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_162_p4 == bound_fu_293_p2) ? 1'b1 : 1'b0);

assign icmp_ln182_fu_256_p2 = ((pooling_axi == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln183_fu_335_p2 = ((ap_phi_mux_col_assign_3_phi_fu_184_p4 == add_ln182_fu_266_p2) ? 1'b1 : 1'b0);

assign icmp_ln189_1_fu_403_p2 = ((select_ln182_fu_340_p3 == in_width_axi) ? 1'b1 : 1'b0);

assign icmp_ln189_2_fu_376_p2 = ((zext_ln182_1_fu_331_p1 == in_width_axi) ? 1'b1 : 1'b0);

assign icmp_ln189_fu_309_p2 = ((zext_ln182_2_fu_299_p1 == in_width_axi) ? 1'b1 : 1'b0);

assign icmp_ln196_fu_272_p2 = ((pooling_axi == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln198_fu_284_p2 = ((pooling_axi == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln208_fu_414_p2 = (($signed(select_ln182_fu_340_p3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln222_1_fu_278_p2 = ((pooling_axi == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln222_3_fu_484_p2 = ((select_ln222_fu_476_p3 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln222_5_fu_362_p2 = ((add_ln182_2_fu_325_p2 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln222_fu_303_p2 = ((ap_phi_mux_row4_0_phi_fu_173_p4 != 31'd0) ? 1'b1 : 1'b0);

assign lshr_ln201_1_fu_514_p4 = {{sub_ln201_fu_509_p2[31:1]}};

assign lshr_ln201_2_fu_534_p4 = {{select_ln182_reg_682[31:1]}};

assign or_ln189_fu_408_p2 = (select_ln182_3_fu_381_p3 | icmp_ln189_1_fu_403_p2);

assign or_ln222_fu_496_p2 = (icmp_ln222_3_fu_484_p2 | and_ln222_1_fu_490_p2);

assign phitmp_fu_593_p3 = ((trunc_ln183_reg_709[0:0] === 1'b1) ? grp_fu_243_p3 : out_data_reg_191);

assign pool_1_insert_data_fu_600_p3 = ((trunc_ln182_reg_696[0:0] === 1'b1) ? grp_fu_243_p3 : phitmp_fu_593_p3);

assign pool_tmp1_fu_579_p3 = ((grp_fu_210_p2[0:0] === 1'b1) ? a_assign_4_load_reg_756 : out_data_reg_191);

assign pool_tmp2_fu_586_p3 = ((grp_fu_217_p2[0:0] === 1'b1) ? pool_line_buf_val_0_7_reg_744 : out_data_reg_191);

assign real_out_data_fu_617_p3 = ((tmp_i7_reg_789_pp0_iter3_reg[0:0] === 1'b1) ? grp_fu_204_p1 : out_data6_1_load_reg_782_pp0_iter3_reg);

assign select_ln182_1_fu_350_p3 = ((icmp_ln183_fu_335_p2[0:0] === 1'b1) ? add_ln182_2_fu_325_p2 : ap_phi_mux_row4_0_phi_fu_173_p4);

assign select_ln182_2_fu_368_p3 = ((icmp_ln183_fu_335_p2[0:0] === 1'b1) ? icmp_ln222_5_fu_362_p2 : icmp_ln222_fu_303_p2);

assign select_ln182_3_fu_381_p3 = ((icmp_ln183_fu_335_p2[0:0] === 1'b1) ? icmp_ln189_2_fu_376_p2 : icmp_ln189_fu_309_p2);

assign select_ln182_fu_340_p3 = ((icmp_ln183_fu_335_p2[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_col_assign_3_phi_fu_184_p4);

assign select_ln201_fu_547_p3 = ((tmp_fu_502_p3[0:0] === 1'b1) ? sub_ln201_1_fu_528_p2 : zext_ln201_1_fu_543_p1);

assign select_ln222_fu_476_p3 = ((tmp_1_fu_442_p3[0:0] === 1'b1) ? sub_ln222_fu_462_p2 : tmp_s_fu_468_p3);

assign strm_out_V_1_ack_in = strm_out_V_1_state[1'd1];

assign strm_out_V_1_ack_out = strm_out_V_TREADY;

assign strm_out_V_1_load_A = (strm_out_V_1_state_cmp_full & ~strm_out_V_1_sel_wr);

assign strm_out_V_1_load_B = (strm_out_V_1_state_cmp_full & strm_out_V_1_sel_wr);

assign strm_out_V_1_sel = strm_out_V_1_sel_rd;

assign strm_out_V_1_state_cmp_full = ((strm_out_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign strm_out_V_1_vld_out = strm_out_V_1_state[1'd0];

assign strm_out_V_TDATA = strm_out_V_1_data_out;

assign strm_out_V_TVALID = strm_out_V_1_state[1'd0];

assign sub_ln201_1_fu_528_p2 = (32'd0 - zext_ln201_fu_524_p1);

assign sub_ln201_fu_509_p2 = (32'd0 - select_ln182_reg_682);

assign sub_ln222_fu_462_p2 = (2'd0 - tmp_2_fu_454_p3);

assign tmp_1_fu_442_p3 = select_ln182_fu_340_p3[32'd31];

assign tmp_2_fu_454_p3 = {{1'd0}, {trunc_ln222_fu_450_p1}};

assign tmp_fu_502_p3 = select_ln182_reg_682[32'd31];

assign tmp_s_fu_468_p3 = {{1'd0}, {trunc_ln183_fu_399_p1}};

assign trunc_ln182_fu_358_p1 = select_ln182_1_fu_350_p3[0:0];

assign trunc_ln183_fu_399_p1 = select_ln182_fu_340_p3[0:0];

assign trunc_ln222_fu_450_p1 = select_ln182_fu_340_p3[0:0];

assign zext_ln182_1_fu_331_p1 = add_ln182_2_fu_325_p2;

assign zext_ln182_2_fu_299_p1 = ap_phi_mux_row4_0_phi_fu_173_p4;

assign zext_ln182_fu_262_p1 = icmp_ln182_fu_256_p2;

assign zext_ln201_1_fu_543_p1 = lshr_ln201_2_fu_534_p4;

assign zext_ln201_fu_524_p1 = lshr_ln201_1_fu_514_p4;

assign zext_ln765_fu_607_p1 = grp_fu_228_p2;

assign zext_ln835_1_fu_426_p1 = grp_fu_228_p2;

assign zext_ln835_2_fu_431_p1 = select_ln182_fu_340_p3;

assign zext_ln835_fu_555_p1 = select_ln201_fu_547_p3;

endmodule //Loop_4_proc6
